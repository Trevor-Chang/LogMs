// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace LogMS.Db
{
    public partial class LogmsContext : DbContext
    {
        public LogmsContext()
        {
        }

        public LogmsContext(DbContextOptions<LogmsContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<AdminToMenu> AdminToMenus { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Chinese_Taiwan_Stroke_CI_AS");

            modelBuilder.Entity<Admin>(entity =>
            {
                entity.ToTable("Admin");

                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.Account)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("帳號");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.EntityStatus).HasComment("狀態");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("姓名");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasComment("密碼");
            });

            modelBuilder.Entity<AdminToMenu>(entity =>
            {
                entity.ToTable("AdminToMenu");

                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.AdminId).HasComment("Admin資料編號");

                entity.Property(e => e.MenuId).HasComment("Menu資料編號");

                entity.HasOne(d => d.Admin)
                    .WithMany(p => p.AdminToMenus)
                    .HasForeignKey(d => d.AdminId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AdminToMenu_Admin1");

                entity.HasOne(d => d.Menu)
                    .WithMany(p => p.AdminToMenus)
                    .HasForeignKey(d => d.MenuId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AdminToMenu_Menu1");
            });

            modelBuilder.Entity<Menu>(entity =>
            {
                entity.ToTable("Menu");

                entity.Property(e => e.Id).HasComment("資料編號");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasComment("建立時間");

                entity.Property(e => e.Creator).HasComment("建立人員");

                entity.Property(e => e.EditDate)
                    .HasColumnType("datetime")
                    .HasComment("編輯持間");

                entity.Property(e => e.Editor).HasComment("編輯人員");

                entity.Property(e => e.Key)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("KEY");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasComment("名稱");

                entity.Property(e => e.Url).HasComment("路徑");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}